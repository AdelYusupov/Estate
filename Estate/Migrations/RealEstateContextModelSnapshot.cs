// <auto-generated />
using Estate.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estate.Migrations
{
    [DbContext(typeof(RealEstateContext))]
    partial class RealEstateContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Estate.Models.Agent", b =>
                {
                    b.Property<int>("Agent_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Agent_ID"));

                    b.Property<int?>("DealShare")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Agent_ID");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Estate.Models.ApartmentFilter", b =>
                {
                    b.Property<int>("ApartmentFilter_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentFilter_ID"));

                    b.Property<decimal?>("MaxArea")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("MaxFloor")
                        .HasColumnType("int");

                    b.Property<int?>("MaxRooms")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinArea")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("MinFloor")
                        .HasColumnType("int");

                    b.Property<int?>("MinRooms")
                        .HasColumnType("int");

                    b.HasKey("ApartmentFilter_ID");

                    b.ToTable("ApartmentFilters", (string)null);
                });

            modelBuilder.Entity("Estate.Models.Client", b =>
                {
                    b.Property<int>("Client_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Client_ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Client_ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Estate.Models.Deal", b =>
                {
                    b.Property<int>("Demand_ID")
                        .HasColumnType("int");

                    b.Property<int>("Supply_ID")
                        .HasColumnType("int");

                    b.HasKey("Demand_ID", "Supply_ID");

                    b.HasIndex("Supply_ID");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("Estate.Models.Demand", b =>
                {
                    b.Property<int>("Demand_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Demand_ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Agent_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ApartmentFilter_ID")
                        .HasColumnType("int");

                    b.Property<int>("Client_ID")
                        .HasColumnType("int");

                    b.Property<int?>("HouseFilter_ID")
                        .HasColumnType("int");

                    b.Property<int?>("LandFilter_ID")
                        .HasColumnType("int");

                    b.Property<int?>("MaxPrice")
                        .HasColumnType("int");

                    b.Property<int?>("MinPrice")
                        .HasColumnType("int");

                    b.HasKey("Demand_ID");

                    b.HasIndex("Agent_ID");

                    b.HasIndex("ApartmentFilter_ID");

                    b.HasIndex("Client_ID");

                    b.HasIndex("HouseFilter_ID");

                    b.HasIndex("LandFilter_ID");

                    b.ToTable("Demands");
                });

            modelBuilder.Entity("Estate.Models.District", b =>
                {
                    b.Property<int>("District_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("District_ID"));

                    b.Property<string>("Coordinates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("District_ID");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Estate.Models.HouseFilter", b =>
                {
                    b.Property<int>("HouseFilter_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HouseFilter_ID"));

                    b.Property<decimal?>("MaxArea")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("MaxFloor")
                        .HasColumnType("int");

                    b.Property<int?>("MaxRooms")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinArea")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("MinFloor")
                        .HasColumnType("int");

                    b.Property<int?>("MinRooms")
                        .HasColumnType("int");

                    b.HasKey("HouseFilter_ID");

                    b.ToTable("HouseFilters", (string)null);
                });

            modelBuilder.Entity("Estate.Models.LandFilter", b =>
                {
                    b.Property<int>("LandFilter_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LandFilter_ID"));

                    b.Property<decimal?>("MaxArea")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("MinArea")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("LandFilter_ID");

                    b.ToTable("LandFilters", (string)null);
                });

            modelBuilder.Entity("Estate.Models.RealEstate", b =>
                {
                    b.Property<int>("RealEstate_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealEstate_ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ApartmentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("District_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LandNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Rooms")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalArea")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("TotalFloors")
                        .HasColumnType("int");

                    b.Property<int>("Type_ID")
                        .HasColumnType("int");

                    b.HasKey("RealEstate_ID");

                    b.HasIndex("District_ID");

                    b.HasIndex("Type_ID");

                    b.ToTable("RealEstates");
                });

            modelBuilder.Entity("Estate.Models.RealEstateType", b =>
                {
                    b.Property<int>("Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Type_ID"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Type_ID");

                    b.ToTable("RealEstateTypes");
                });

            modelBuilder.Entity("Estate.Models.Supply", b =>
                {
                    b.Property<int>("Supply_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Supply_ID"));

                    b.Property<int>("Agent_ID")
                        .HasColumnType("int");

                    b.Property<int>("Client_ID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RealEstate_ID")
                        .HasColumnType("int");

                    b.HasKey("Supply_ID");

                    b.HasIndex("Agent_ID");

                    b.HasIndex("Client_ID");

                    b.HasIndex("RealEstate_ID");

                    b.ToTable("Supplies");
                });

            modelBuilder.Entity("Estate.Models.Deal", b =>
                {
                    b.HasOne("Estate.Models.Demand", "Demand")
                        .WithMany("Deals")
                        .HasForeignKey("Demand_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Estate.Models.Supply", "Supply")
                        .WithMany("Deals")
                        .HasForeignKey("Supply_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Demand");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("Estate.Models.Demand", b =>
                {
                    b.HasOne("Estate.Models.Agent", "Agent")
                        .WithMany("Demands")
                        .HasForeignKey("Agent_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estate.Models.ApartmentFilter", "ApartmentFilter")
                        .WithMany("Demands")
                        .HasForeignKey("ApartmentFilter_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Estate.Models.Client", "Client")
                        .WithMany("Demands")
                        .HasForeignKey("Client_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estate.Models.HouseFilter", "HouseFilter")
                        .WithMany("Demands")
                        .HasForeignKey("HouseFilter_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Estate.Models.LandFilter", "LandFilter")
                        .WithMany("Demands")
                        .HasForeignKey("LandFilter_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Agent");

                    b.Navigation("ApartmentFilter");

                    b.Navigation("Client");

                    b.Navigation("HouseFilter");

                    b.Navigation("LandFilter");
                });

            modelBuilder.Entity("Estate.Models.RealEstate", b =>
                {
                    b.HasOne("Estate.Models.District", "District")
                        .WithMany("RealEstates")
                        .HasForeignKey("District_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Estate.Models.RealEstateType", "RealEstateType")
                        .WithMany("RealEstates")
                        .HasForeignKey("Type_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("District");

                    b.Navigation("RealEstateType");
                });

            modelBuilder.Entity("Estate.Models.Supply", b =>
                {
                    b.HasOne("Estate.Models.Agent", "Agent")
                        .WithMany("Supplies")
                        .HasForeignKey("Agent_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estate.Models.Client", "Client")
                        .WithMany("Supplies")
                        .HasForeignKey("Client_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estate.Models.RealEstate", "RealEstate")
                        .WithMany("Supplies")
                        .HasForeignKey("RealEstate_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Client");

                    b.Navigation("RealEstate");
                });

            modelBuilder.Entity("Estate.Models.Agent", b =>
                {
                    b.Navigation("Demands");

                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("Estate.Models.ApartmentFilter", b =>
                {
                    b.Navigation("Demands");
                });

            modelBuilder.Entity("Estate.Models.Client", b =>
                {
                    b.Navigation("Demands");

                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("Estate.Models.Demand", b =>
                {
                    b.Navigation("Deals");
                });

            modelBuilder.Entity("Estate.Models.District", b =>
                {
                    b.Navigation("RealEstates");
                });

            modelBuilder.Entity("Estate.Models.HouseFilter", b =>
                {
                    b.Navigation("Demands");
                });

            modelBuilder.Entity("Estate.Models.LandFilter", b =>
                {
                    b.Navigation("Demands");
                });

            modelBuilder.Entity("Estate.Models.RealEstate", b =>
                {
                    b.Navigation("Supplies");
                });

            modelBuilder.Entity("Estate.Models.RealEstateType", b =>
                {
                    b.Navigation("RealEstates");
                });

            modelBuilder.Entity("Estate.Models.Supply", b =>
                {
                    b.Navigation("Deals");
                });
#pragma warning restore 612, 618
        }
    }
}
